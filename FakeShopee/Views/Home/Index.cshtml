@{
    ViewData["Title"] = "Home Page";
    FindProductByCriteriaRequest findProductByCriteriaRequest = ViewBag.findProductByCriteria;
    Layout = "_MainLayout";
}
@using FakeShopee.constant
@model HomeData

<div class="container">

    <partial name="HomeBanner"/>

    <div class="grid__row grid">
        <div class="category grid__column2">
            <h3 class="category__heading">
                <i class="fa-solid fa-bars"></i>
                <span class="category__heading-text">
                    Danh Mục
                </span>
            </h3>

            <ul class="category-list">
                @if (Model.ListCategory != null && Model.ListCategory.Count > 0)
                {
                    @foreach (Category category in Model.ListCategory)
                    {
                        <li 
                            class="category-item @(findProductByCriteriaRequest?.Category == category.Name ? "category-item-follow" : "") ">
                            <a href="@Url.Action("FindProductByCriteria", "Home", new FindProductByCriteriaRequest(){
                                         NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                         Category = category.Name,
                                     })"
                               class="category-item-link">@category.Name</a>
                        </li>
                    }
                }
            </ul>
        </div>

        <div class="product">
            <div class="product-header">
                <div class="product-header-left">
                    <p class="product-title">Sắp xếp theo</p>
                    <a class="product-header__item @(findProductByCriteriaRequest?.SortBy == SortType.POPULAR ? "product-header__item-follow" : "")"
                       href="@Url.Action("FindProductByCriteria",
                                 "Home", 
                                 new FindProductByCriteriaRequest(){
                                     NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                     Category = findProductByCriteriaRequest?.Category,
                                     SortBy = SortType.POPULAR
                                 })"
                    >@(SortType.POPULAR.GetDescription())</a>
                    
                    <a class="product-header__item @(findProductByCriteriaRequest?.SortBy == SortType.NEW ? "product-header__item-follow" : "")"
                       href="@Url.Action("FindProductByCriteria",
                                 "Home", 
                                 new FindProductByCriteriaRequest(){
                                    NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                    Category = findProductByCriteriaRequest?.Category,
                                    SortBy = SortType.NEW
                                })"
                    >@(SortType.NEW.GetDescription())</a>
                    
                    <a class="product-header__item @(findProductByCriteriaRequest?.SortBy == SortType.HOT_SELLING ? "product-header__item-follow" : "")"
                       href="@Url.Action("FindProductByCriteria",
                                 "Home", 
                                 new FindProductByCriteriaRequest(){
                                     NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                     Category = findProductByCriteriaRequest?.Category,
                                     SortBy = SortType.HOT_SELLING
                                 })"
                    >@(SortType.HOT_SELLING.GetDescription())</a>
                    
                    <div class="product-header__item @((findProductByCriteriaRequest?.SortBy == SortType.PRICE_ASC ||
                                                        findProductByCriteriaRequest?.SortBy == SortType.PRICE_DESC)
                                                         ? "product-header__item-follow" : "")"
                         >
                        <p class="product-header__item--price-text"
                           >@((findProductByCriteriaRequest?.SortBy == SortType.PRICE_ASC ||
                                findProductByCriteriaRequest?.SortBy == SortType.PRICE_DESC)
                                 ? findProductByCriteriaRequest?.SortBy.GetDescription() : "Giá")</p>
                        <i class="fa-solid fa-angle-down"></i>
                        <div class="product-header-sort_price">
                            <a class="product-header-sort_price__item"
                               href="@Url.Action("FindProductByCriteria",
                                         "Home", 
                                         new FindProductByCriteriaRequest(){
                                             NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                             Category = findProductByCriteriaRequest?.Category,
                                             SortBy = SortType.PRICE_ASC
                                         })"
                            >@(SortType.PRICE_ASC.GetDescription())</a>
                            
                            <br>
                            <a class="product-header-sort_price__item" 
                               href="@Url.Action("FindProductByCriteria",
                                         "Home", 
                                         new FindProductByCriteriaRequest(){
                                             NameProductOrCategory = findProductByCriteriaRequest?.NameProductOrCategory,
                                             Category = findProductByCriteriaRequest?.Category,
                                             SortBy = SortType.PRICE_DESC
                                         })"
                            >@(SortType.PRICE_DESC.GetDescription())</a>
                            
                        </div>
                    </div>
                </div>
                <div class="product-header-right">
                    <div class="product-title">
                        <div class="product-header__index">1</div>
                        <div class="product-header__sum">/16</div>
                    </div>
                    <div class="product-next_and_previous_page">
                        <div class="product-header__item product-header-previous_page">
                            <i class="fa-solid fa-angle-left"></i>
                        </div>
                        <div class="product-header__item product-header-next_page">
                            <i class="fa-solid fa-angle-right"></i>
                        </div>

                    </div>
                </div>

            </div>

            <div class="product-list ">
                @if (Model.ListProduct != null && Model.ListProduct.Count > 0)
                {
                    @foreach (Product product in Model.ListProduct)
                    {
                        <partial name="HomeProductItem" model="product"/>
                    }
                }
            </div>

            <div class="product-page_number">
                @if (findProductByCriteriaRequest.PageNumber > 1)
                {
                    FindProductByCriteriaRequest tmp = (FindProductByCriteriaRequest)findProductByCriteriaRequest.Clone();
                    tmp.PageNumber -= 1;
                    <a class="product-page_number__item" 
                    href="@Url.Action("FindProductByCriteria", "Home", tmp)"
                       >
                        <i class="fa-solid fa-angle-left"></i>
                    </a>
                }
                else
                {
                    <a class="product-page_number__item" >
                        <i class="fa-solid fa-angle-left"></i>
                    </a>
                }
                
                @if (findProductByCriteriaRequest.PageTotal != null)
                {
                    FindProductByCriteriaRequest tmp = (FindProductByCriteriaRequest)findProductByCriteriaRequest.Clone();
                    for (int i = 1; i <= findProductByCriteriaRequest.PageTotal; i++)
                    {
                        tmp.PageNumber = i;
                        if (i == findProductByCriteriaRequest.PageNumber)
                        {
                            <a class="product-page_number__item product-page_number__item--follow"
                               href="@Url.Action("FindProductByCriteria", "Home", tmp)">@i</a>
                        }
                        else
                        {
                            <a class="product-page_number__item"
                               href="@Url.Action("FindProductByCriteria", "Home", tmp)">@i</a>
                        }
                    }
                }
                
                @if (findProductByCriteriaRequest.PageNumber < findProductByCriteriaRequest.PageTotal)
                    {
                        FindProductByCriteriaRequest tmp = (FindProductByCriteriaRequest)findProductByCriteriaRequest.Clone();
                        tmp.PageNumber += 1;
                        <a class="product-page_number__item" 
                        href="@Url.Action("FindProductByCriteria", "Home", tmp)"
                           >
                            <i class="fa-solid fa-angle-right"></i>
                        </a>
                    }
                    else
                    {
                        <a class="product-page_number__item" >
                            <i class="fa-solid fa-angle-right"></i>
                        </a>
                    }
                
            </div>

        </div>
    </div>

</div>

<script src="~/js/HomeIndex.js"></script>
<script>
    function previousPage() {
        var urlParams = new URLSearchParams(window.location.search);
        var pageNumber = parseInt(urlParams.get('PageNumber')) || 1;
    
        if (pageNumber > 1) {
            pageNumber--;
            urlParams.set('PageNumber', pageNumber.toString());
            console.log(window.location.pathname + '?' + urlParams.toString());
            window.location.href = window.location.pathname + '?' + urlParams.toString();
        }
    }
    
    function nextPage() {
        var urlParams = new URLSearchParams(window.location.search);
        var pageNumber = parseInt(urlParams.get('PageNumber')) || 1;
        var pageTotal = parseInt(urlParams.get('PageTotal')) || 1;
    
        if (pageNumber < pageTotal) {
            pageNumber++;
            urlParams.set('PageNumber', pageNumber.toString());
            console.log(window.location.pathname + '?' + urlParams.toString());
            window.location.href = window.location.pathname + '?' + urlParams.toString();
        }
    }
    
   
</script>